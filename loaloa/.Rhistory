source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
str(grid10km)
?projectRaster
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
names(grid10km) <- c("elevationLoa", "eviLoa", "tempLoa", "ltLoa")
str(grid10km@data)
grid10km$ltLoa <- as.factor(grid10km$ltLoa)
grid10km$tempLoa <- ifelse(is.NaN(grid10km$tempLoa), NA, grid10km$tempLoa)
grid10km$tempLoa <- ifelse(is.nan(grid10km$tempLoa), NA, grid10km$tempLoa)
plot(stack(grid10km))
loaloa$pre <- loaloa$y/loaloa$N
m.pre <- fit.gstatModel(loaloa, pre~elevationLoa+eviLoa+tempLoa, grid10km, method="quantregForest")
plot(m.pre)
m.pre <- fit.gstatModel(loaloa, pre~elevationLoa+eviLoa, grid10km, method="quantregForest")
str(grid10km@data)
summary(grid10km@data)
plot(stack(grid10km))
points(loaloa, pch="+")
plot(raster(grid10km))
points(loaloa, pch="+")
m.pre <- fit.gstatModel(loaloa, pre~elevationLoa+eviLoa, grid10km, method="randomForest")
plot(m.pre)
varImpPlot(m.pre)
varImpPlot(m.pre@regModel)
m.pre <- fit.gstatModel(loaloa, pre~elevationLoa+eviLoa+tempLoa+ltLoa, grid10km, method="randomForest")
plot(m.pre)
varImpPlot(m.pre@regModel)
rk.pre <- predict(m.pre, grid10km)
rk.pre <- predict(m.pre, grid10km, z.lim=c(0,1))
rk.pre <- predict(m.pre, grid10km, zlim=c(0,1))
rk.pre <- predict(m.pre, grid10km, zmin=0, zmax=0)
rk.pre <- predict(m.pre, grid10km, zmin=0, zmax=1)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
library(plotKML)
plotKML(rk.pre)
plotKML(rk.pre, colour_scale=SAGA_pal[[1]])
q()
rm(list=ls(all=TRUE))
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
varImpPlot(m.pre@regModel)
rk.pre <- predict(m.pre, grid2km, zmin=0, zmax=100)
m.pre <- fit.gstatModel(loaloa, pre~elevationLoa+eviLoa+tempLoa+ltLoa, grid2km, method="randomForest")
plot(m.pre)
varImpPlot(m.pre@regModel)
rk.pre <- predict(m.pre, grid2km, zmin=0, zmax=100)
plotKML(rk.pre, colour_scale=SAGA_pal[[1]])
library(plotKML)
plotKML(rk.pre, colour_scale=SAGA_pal[[1]])
q()
